{"version":3,"sources":["Components/AddCategory.js","helpers/getGif.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cts","type","value","onChange","target","getGif","category","a","URL","fetch","res","json","data","gift","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAQ,OACRC,MAAST,EACTU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCNlBG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACF,mCACVC,EAFY,iDAEoCF,EAFpC,oBACF,mCADE,sBAGAG,MAAMD,GAHN,cAGZE,EAHY,gBAIGA,EAAIC,OAJP,uBAIXC,EAJW,EAIXA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAXvB,kBAeXL,GAfW,4CAAH,sDCENQ,EAAc,SAAC,GAAiB,IAAhBJ,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC/B,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECLyB,SAAEA,GAC3B,MAA0Bd,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAf,GACHa,EAAS,CACLhB,KAAKG,EACLW,SAAS,SAGtB,CAACpB,IAGGqB,EDXkBI,CAAczB,GAA/BM,EAAR,EAAQA,KAAKc,EAAb,EAAaA,QAEb,OACI,qCACI,mCAAMpB,EAAN,OAECoB,GAAW,gBACZ,qBAAKJ,UAAU,YAAf,SACI,6BAEQV,EAAKE,KAAK,SAAAC,GAAG,OAAI,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,iBEgBzDiB,MA5Bf,WAEI,MAAmCzC,mBAAS,CAAC,gBAA7C,mBAAO0C,EAAP,KAAkB3C,EAAlB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQ2C,EAAWpB,KAAK,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,Y,MChB9D6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.206aebb3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('Hola Mundo')\r\n    \r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2  ){\r\n            setCategories( cts => [inputValue,...cts])\r\n            setInputValue('')    \r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type  = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//para oblicar que se mande por parametro la category\r\nAddCategory.propTypes = {\r\n        setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGif = async ( category )=>{\r\n    const API_KEY = 'OaIouHJxZGv3uYo6uqmeL1IS379zIC73';\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${category}&api_key=${API_KEY}&limit=10`;\r\n    const res = await fetch(URL);\r\n    const {data} = await res.json();\r\n\r\n\r\n    const gift = data.map( img =>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        \r\n        }\r\n    })\r\n    return gift;\r\n    \r\n    \r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    //const [images, setImages] = useState([])\r\n    \r\n    const { data,loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            {loading && 'Cargando.....'}\r\n            <div className='card-grid'>\r\n                <ol>\r\n                    {\r\n                        data.map( img => <GifGridItem {...img} key={img.id}/>  )\r\n                    }\r\n                        \r\n                    \r\n\r\n\r\n                </ol>\r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n","import { useState,useEffect } from 'react'\r\nimport { getGif } from '../helpers/getGif'\r\nexport const useFetchGifs =  ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGif( category )\r\n            .then( img => {\r\n                setstate({\r\n                    data:img,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n    \r\n\r\n    return state\r\n}","import React, { useState } from \"react\";  \r\n\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nfunction GifExpertApp() {\r\n    //const categories = ['Naruto','Dragon Ball']\r\n    const [categories,setCategories] = useState(['Dragon ball']);\r\n\r\n    /* const handleAdd = ()=>{\r\n        const name = 'PON'\r\n        setCategories([...categories,name]);\r\n    }\r\n */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => <GifGrid key={category} category={ category}/>)\r\n\r\n\r\n                }    \r\n                \r\n            \r\n            </ol> \r\n        </>\r\n\r\n    )\r\n    \r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n  \n);\n"],"sourceRoot":""}